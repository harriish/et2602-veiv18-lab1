#!/usr/bin/python
import socket, sys
import re, select
from threading import Thread

my_server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
if(len(sys.argv) < 2):
	print("input be : python chatserver.py hostname:port")
	sys.exit()
my_list = sys.argv[1].split(':')
my_host = str(my_list[0])
my_port = int(my_list[1])
my_clients = {}#a list of clients
my_client_sockets = []
my_server.bind(( my_host, my_port ))

def clients_request() :
	while True:
		client, client_address = my_server.accept()
		print("%s:%s has been connected" % client_address)
		client.send("Hello 1 \n")
		my_client_sockets.append(client)
		Thread(target = handle_client, args = (client, client_address)).start()



def handle_client(client, client_address) :

	capacity = client.recv(1024)
	message = capacity.strip("NICK ")
	if len(message)<=12 and re.match("^[A-Za-z0-9\_]+$",message) is not None:
		client.send("OK \n")
	else :
		client.send("Error - nickname is not valid \n")
		message = 'Unknown'
	display = "%s has connected and joined the chat \n"% message
	broadcast(display, client)
	my_clients[client] = message
	while True :
		flag = client.recv(1024).decode('utf-8')
		display = flag.strip("MSG ")
		if not display:
			client.close()
			del my_clients[client]
			fault = "%s has left the chat \n"% message
			print("%s:%s has disconnected" %client_address)
			broadcast(fault,client)
			break
		else :
			if len(display) > 255 and re.match("^[^\x00 - \x7F]*$", display) is None:
				client.send("Error - message is not valid")
				send_a_message = "MSG "+message +" "
			else:
				send_a_message = "MSG "+message +" "+ display
				#print(send_a_message)
			broadcast(send_a_message,client)