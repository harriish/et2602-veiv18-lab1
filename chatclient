#!/usr/bin/python
import socket, sys
import select, re, string
from thread import *



if len(sys.argv) != 3:
	print("input be python chatclient hostname:port nickname")#nickname is limited to 12 characters
	sys.exit()
my_server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)#AF_INET is address domain of socket and SOCK_STREAM is data which are read
my_server.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)

my_list = sys.argv[1]
all = my_list.split(':')

my_host = str(all[0])
my_port = int(all[1])
my_nickname = str(sys.argv[2])

#my_server.settimeout(10)
my_server.connect((my_host, my_port))
send_message = my_server.recv(2048).decode('utf-8')
print(send_message)

my_nickname =  'NICK ' + my_nickname
my_server.sendall(my_nickname.encode('utf-8'))#to solve req2
received_message = my_server.recv(2048).decode('utf-8')
print(received_message)
if received_message == "OK":
	pass
elif received_message == "Error nickname is not valid":
	print('error because,Dont exceed the limit i.e. more than 12 characters or any special characters are given')
sys.exit()



while True:
	list_of_my_sockets = [sys.stdin, my_server]#list of input streams
	list1,list2,list3 = select.select(list_of_my_sockets,[],[])#if server wants to send a message then if condition will send true and if user wants to send a message then else condition will be true
	for i in list1:
		if i == my_server:
			message = my_server.recv(20248).decode('utf-8')
			print(message)
		else:
			message = sys.stdin.readline()
			message = 'MSG ' + message	
			if message == '\n':
				continue
			else:
				server.sendall(message.encode('utf-8'))

my_server.close()